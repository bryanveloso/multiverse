---
import { getCollection } from 'astro:content';

import Base from '@/layouts/Base.astro';
import Timeline from '@/components/timeline';

// Get content collections
const posts = (await getCollection('blog')).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

const eras = await getCollection('eras');
const gaps = await getCollection('gaps');

// Get new collections (may be empty initially)
const locations = await getCollection('locations').catch(() => []);
const jobs = await getCollection('jobs').catch(() => []);

// Combine all into timeline items
const timelineItems = [
  // Blog posts
  ...posts.map((post) => ({
    type: 'post',
    title: post.data.title,
    date: post.data.date,
    description: post.data.description,
    id: post.id,
    significance: post.data.significance || 3,
  })),

  // Major life eras
  ...eras.map((era) => ({
    type: 'era',
    title: era.data.title,
    startDate: era.data.startDate,
    endDate: era.data.endDate || new Date(),
    description: era.data.description,
    color: era.data.color,
  })),

  // Life events/gaps
  ...gaps.map((gap) => ({
    type: 'gap',
    title: gap.data.title,
    date: gap.data.date,
    description: gap.data.description,
    color: gap.data.color,
    significance: gap.data.significance || 3,
  })),

  // Locations lived
  ...locations.map((location) => ({
    type: 'location',
    name: location.data.name,
    startDate: location.data.startDate,
    endDate: location.data.endDate,
    description: location.data.description,
    color: location.data.color,
  })),

  // Jobs held
  ...jobs.map((job) => ({
    type: 'job',
    company: job.data.company,
    title: job.data.title,
    startDate: job.data.startDate,
    endDate: job.data.endDate,
    description: job.data.description,
  })),
];
---

<Base title="Avalonstar" description="The mind of Bryan Veloso.">
  <h1 class="text-4xl font-bold mb-6">Avalonstar</h1>

  <Timeline items={timelineItems} />
</Base>
