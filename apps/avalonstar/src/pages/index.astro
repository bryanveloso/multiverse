---
import { getCollection } from 'astro:content'

import Base from '@/layouts/base.astro'
import Timeline from '@/components/timeline'
import Footer from '@/components/footer.astro'
import Header from '@/components/header.astro'

import ChevronTL from '@/assets/chevron-tl.svg'
import Katakana from '@/assets/katakana.svg'
import { cn } from '@/utils/style'

// Get content collections
const eras = await getCollection('eras')
const gaps = await getCollection('gaps')
const jobs = await getCollection('jobs')
const locations = await getCollection('locations')
const posts = await getCollection('blog')

// Combine all into timeline items
const timelineItems = [
  // Blog posts
  ...posts.map((post) => ({
    type: 'post',
    title: post.data.title,
    date: post.data.date,
    description: post.data.description,
    id: post.id,
    significance: post.data.significance || 3,
    crosspost: post.data.crosspost
  })),

  // Major life eras
  ...eras.map((era) => ({
    type: 'era',
    title: era.data.title,
    startDate: era.data.startDate,
    endDate: era.data.endDate || new Date(),
    description: era.data.description,
    color: era.data.color
  })),

  // Life events/gaps
  ...gaps.map((gap) => ({
    type: 'gap',
    title: gap.data.title,
    date: gap.data.date,
    description: gap.data.description,
    color: gap.data.color,
    significance: gap.data.significance || 3
  })),

  // Locations lived
  ...locations.map((location) => ({
    type: 'location',
    name: location.data.name,
    startDate: location.data.startDate,
    endDate: location.data.endDate,
    description: location.data.description,
    color: location.data.color
  })),

  // Jobs held
  ...jobs.map((job) => ({
    type: 'job',
    company: job.data.company,
    title: job.data.title,
    startDate: job.data.startDate,
    endDate: job.data.endDate,
    description: job.data.description,
    color: job.data.color
  }))
]
---

<Base title="Avalonstar">
  <div class="grid grid-cols-1 gap-8 md:grid-cols-[1fr_3fr]">
    <div
      class="col-start-1 row-span-full bg-[image:repeating-linear-gradient(45deg,_var(--pattern-fg)_0,_var(--pattern-fg)_1px,_transparent_0,_transparent_50%)] bg-[size:10px_10px] bg-repeat [--pattern-fg:var(--color-black)]/5 md:block dark:[--pattern-fg:var(--color-white)]/10"
    >
    </div>
    <div
      class={cn(
        'col-start-1 grid grid-cols-[repeat(3,var(--event-line-width))_48px_1fr] [--event-line-width:24px] md:col-start-2 md:[--event-line-width:36px]'
      )}
    >
      <div aria-hidden="true" class="absolute mt-6 flex items-center gap-2 mix-blend-soft-light">
        <ChevronTL class="text-sage h-8 w-8" />
        <Katakana class="h-4 text-white" />
      </div>
      <Header />
      <main class="col-span-5 grid grid-cols-subgrid text-sm">
        <Timeline items={timelineItems} />
      </main>
      <Footer />
    </div>
  </div>
</Base>
