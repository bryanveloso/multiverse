---
// This component displays contextual information about a blog post
// including age, era, job, location, etc. at the time of writing

import { getCollection } from 'astro:content';
import { getAuthorAge } from '../utils/age';

interface Props {
  date: Date;
}

const { date } = Astro.props;
const authorAge = getAuthorAge(date);

// Find the active era at the time of the post
const eras = await getCollection('eras');
const activeEra = eras.find(
  (era) => 
    date >= era.data.startDate && 
    (era.data.endDate ? date <= era.data.endDate : true)
);

// Find the job at the time of the post
const jobs = await getCollection('jobs').catch(() => []);
const activeJob = jobs.find(
  (job) => {
    const endDate = job.data.endDate || new Date();
    return date >= job.data.startDate && date <= endDate;
  }
);

// Find the location at the time of the post
const locations = await getCollection('locations').catch(() => []);
const activeLocation = locations.find(
  (location) => {
    const endDate = location.data.endDate || new Date();
    return date >= location.data.startDate && date <= endDate;
  }
);

// Check if we have anything to display
const hasContext = activeEra || activeJob || activeLocation;
---

<div class="bg-gray-50 rounded-lg p-4 border border-gray-200 space-y-3 sticky top-6">
  <h3 class="font-medium text-gray-900 text-sm">Life Context</h3>
  
  <div class="space-y-2 text-sm">
    <div class="flex items-center justify-between">
      <span class="text-gray-500">Age:</span>
      <span class="font-medium">{authorAge}</span>
    </div>
    
    {activeEra && (
      <div class="flex items-center justify-between">
        <span class="text-gray-500">Era:</span>
        <span class="font-medium" style={activeEra.data.color ? `color: ${activeEra.data.color}` : undefined}>
          {activeEra.data.title}
        </span>
      </div>
    )}
    
    {activeLocation && (
      <div class="flex items-center justify-between">
        <span class="text-gray-500">Location:</span>
        <span class="font-medium">
          {activeLocation.data.name}
        </span>
      </div>
    )}
    
    {activeJob && (
      <div class="flex items-center justify-between">
        <span class="text-gray-500">Job:</span>
        <span class="font-medium">
          {activeJob.data.title} at {activeJob.data.company}
        </span>
      </div>
    )}
  </div>
</div>